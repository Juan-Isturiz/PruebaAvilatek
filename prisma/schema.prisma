// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  password  String
  role      UserRoles
  status    UserStatus @default(ACTIVE)
  lastLogin DateTime   @default(now())
  Order     Order[]
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String
  description   String
  price         Float
  stock         Int             @default(0)
  availability  Boolean         @default(true)
  status        Boolean         @default(true)
  OrderProducts OrderProducts[]
}

model Order {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  client        User            @relation(fields: [clientId], references: [id])
  clientId      Int
  status        OrderStatus     @default(PENDING)
  OrderProducts OrderProducts[]
}

model OrderProducts {
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  quantity  Int

  @@id([productId, orderId])
}

enum OrderStatus {
  PENDING
  PROCESSING
  DELIVERING
  COMPLETED
  CANCELED
}

enum UserStatus {
  ACTIVE
  SUSPENDED
  DELETED
}

enum UserRoles {
  ADMIN
  CLIENT
}
